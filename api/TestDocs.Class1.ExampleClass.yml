### YamlMime:ManagedReference
items:
- uid: TestDocs.Class1.ExampleClass
  commentId: T:TestDocs.Class1.ExampleClass
  id: Class1.ExampleClass
  parent: TestDocs
  children:
  - TestDocs.Class1.ExampleClass.Add(System.Int32,System.Int32)
  - TestDocs.Class1.ExampleClass.Label
  langs:
  - csharp
  - vb
  name: Class1.ExampleClass
  nameWithType: Class1.ExampleClass
  fullName: TestDocs.Class1.ExampleClass
  type: Class
  source:
    remote:
      path: Class1.cs
      branch: master
      repo: https://github.com/ZrekZ/TestDocs.git
    id: ExampleClass
    path: Class1.cs
    startLine: 85
  assemblies:
  - TestDocs
  namespace: TestDocs
  summary: "\nEvery class and member should have a one sentence\nsummary describing its purpose.\n"
  remarks: "\nYou can expand on that one sentence summary to\nprovide more information for readers. In this case,\nthe <code>ExampleClass</code> provides different C#\nelements to show how you would add documentation\ncomments for most elements in a typical class.\n<p>\nThe remarks can add multiple paragraphs, so you can\nwrite detailed information for developers that use\nyour work. You should add everything needed for\nreaders to be successful. This class contains\nexamples for the following:\n</p>\n<table><tbody><tr><td>Summary</td><td>\nThis should provide a one sentence summary of the class or member.\n</td></tr><tr><td>Remarks</td><td>\nThis is typically a more detailed description of the class or member\n</td></tr><tr><td>para</td><td>\nThe para tag separates a section into multiple paragraphs\n</td></tr><tr><td>list</td><td>\nProvides a list of terms or elements\n</td></tr><tr><td>returns, param</td><td>\nUsed to describe parameters and return values\n</td></tr><tr><td>value</td><td>Used to describe properties</td></tr><tr><td>exception</td><td>\nUsed to describe exceptions that may be thrown\n</td></tr><tr><td>c, cref, see, seealso</td><td>\nThese provide code style and links to other\ndocumentation elements\n</td></tr><tr><td>example, code</td><td>\nThese are used for code examples\n</td></tr></tbody></table>\n<p>\nThe list above uses the &quot;table&quot; style. You could\nalso use the &quot;bullet&quot; or &quot;number&quot; style. Neither\nwould typically use the &quot;term&quot; element.\n<br />\nNote: paragraphs are double spaced. Use the *br*\ntag for single spaced lines.\n</p>\n"
  example: []
  syntax:
    content: public class ExampleClass
    content.vb: Public Class ExampleClass
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TestDocs.Class1.ExampleClass.Label
  commentId: P:TestDocs.Class1.ExampleClass.Label
  id: Label
  parent: TestDocs.Class1.ExampleClass
  langs:
  - csharp
  - vb
  name: Label
  nameWithType: Class1.ExampleClass.Label
  fullName: TestDocs.Class1.ExampleClass.Label
  type: Property
  source:
    remote:
      path: Class1.cs
      branch: master
      repo: https://github.com/ZrekZ/TestDocs.git
    id: Label
    path: Class1.cs
    startLine: 99
  assemblies:
  - TestDocs
  namespace: TestDocs
  remarks: "\nThe <xref href=\"TestDocs.Class1.ExampleClass.Label\" data-throw-if-not-resolved=\"false\"></xref> is a <xref uid=\"langword_csharp_string\" name=\"string\" href=\"\"></xref>\nthat you use for a label.\n<p>\nNote that there isn&apos;t a way to provide a &quot;cref&quot; to\neach accessor, only to the property itself.\n</p>\n"
  example: []
  syntax:
    content: public string Label { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe <code>Label</code> property represents a label\nfor this instance.\n"
    content.vb: Public Property Label As String
  overload: TestDocs.Class1.ExampleClass.Label*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TestDocs.Class1.ExampleClass.Add(System.Int32,System.Int32)
  commentId: M:TestDocs.Class1.ExampleClass.Add(System.Int32,System.Int32)
  id: Add(System.Int32,System.Int32)
  parent: TestDocs.Class1.ExampleClass
  langs:
  - csharp
  - vb
  name: Add(Int32, Int32)
  nameWithType: Class1.ExampleClass.Add(Int32, Int32)
  fullName: TestDocs.Class1.ExampleClass.Add(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Class1.cs
      branch: master
      repo: https://github.com/ZrekZ/TestDocs.git
    id: Add
    path: Class1.cs
    startLine: 137
  assemblies:
  - TestDocs
  namespace: TestDocs
  summary: "\nAdds two integers and returns the result.\n"
  example:
  - "\n<pre><code>int c = Math.Add(4, 5);\nif (c > 10)\n{\n    Console.WriteLine(c);\n}</code></pre>\n"
  syntax:
    content: public static int Add(int left, int right)
    parameters:
    - id: left
      type: System.Int32
      description: "\nThe left operand of the addition.\n"
    - id: right
      type: System.Int32
      description: "\nThe right operand of the addition.\n"
    return:
      type: System.Int32
      description: "\nThe sum of two integers.\n"
    content.vb: Public Shared Function Add(left As Integer, right As Integer) As Integer
  overload: TestDocs.Class1.ExampleClass.Add*
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\nThrown when one parameter is\n<see cref=\"!:Int32.MaxValue\">MaxValue</see> and the other is\ngreater than 0.\nNote that here you can also use\n<a href=\"https://learn.microsoft.com/dotnet/api/system.int32.maxvalue\">https://learn.microsoft.com/dotnet/api/system.int32.maxvalue</a>\n to point a web page instead.\n"
  seealso:
  - linkId: TestDocs.Class1.ExampleClass.Label
    commentId: P:TestDocs.Class1.ExampleClass.Label
  see:
  - linkId: TestDocs.Class1.ExampleClass
    commentId: T:TestDocs.Class1.ExampleClass
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: TestDocs
  commentId: N:TestDocs
  name: TestDocs
  nameWithType: TestDocs
  fullName: TestDocs
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TestDocs.Class1.ExampleClass.Label
  commentId: P:TestDocs.Class1.ExampleClass.Label
  isExternal: true
- uid: TestDocs.Class1.ExampleClass.Label*
  commentId: Overload:TestDocs.Class1.ExampleClass.Label
  name: Label
  nameWithType: Class1.ExampleClass.Label
  fullName: TestDocs.Class1.ExampleClass.Label
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TestDocs.Class1.ExampleClass
  commentId: T:TestDocs.Class1.ExampleClass
  name: Class1.ExampleClass
  nameWithType: Class1.ExampleClass
  fullName: TestDocs.Class1.ExampleClass
- uid: System.OverflowException
  commentId: T:System.OverflowException
  isExternal: true
- uid: TestDocs.Class1.ExampleClass.Add*
  commentId: Overload:TestDocs.Class1.ExampleClass.Add
  name: Add
  nameWithType: Class1.ExampleClass.Add
  fullName: TestDocs.Class1.ExampleClass.Add
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
